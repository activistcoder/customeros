type Mutation {
    createTenantUser(input: TenantUserInput!): TenantUser!

    createContact(input: ContactInput!): Contact!
    updateContact(input: ContactUpdateInput!): Contact!
    hardDeleteContact(contactId: ID!): BooleanResult!
    softDeleteContact(contactId: ID!): BooleanResult!

    mergeTextCustomFieldToContact(contactId : ID!, input: TextCustomFieldInput!): TextCustomField!
    updateTextCustomFieldInContact(contactId : ID!, input: TextCustomFieldUpdateInput!): TextCustomField!
    removeTextCustomFieldFromContact(contactId : ID!, fieldName: String!): BooleanResult!
    removeTextCustomFieldFromContactById(contactId : ID!, id: ID!): BooleanResult!

    mergeFieldsSetToContact(contactId : ID!, input: FieldsSetInput!): FieldsSet
    updateFieldsSetInContact(contactId : ID!, input: FieldsSetUpdateInput!): FieldsSet
#    alexb implement removing linked custom fields
    removeFieldsSetFromContact(contactId : ID!, id: ID!):BooleanResult!

    mergePhoneNumberToContact(contactId : ID!, input: PhoneNumberInput!): PhoneNumberInfo!
    updatePhoneNumberInContact(contactId : ID!, input: PhoneNumberUpdateInput!): PhoneNumberInfo!
    removePhoneNumberFromContact(contactId : ID!, phoneNumber: String!): BooleanResult!
    removePhoneNumberFromContactById(contactId : ID!, id: ID!): BooleanResult!

    mergeEmailToContact(contactId : ID!, input: EmailInput!): EmailInfo!
    updateEmailInContact(contactId : ID!, input: EmailUpdateInput!): EmailInfo!
    removeEmailFromContact(contactId : ID!, email: String!): BooleanResult!
    removeEmailFromContactById(contactId : ID!, id: ID!): BooleanResult!

    createContactGroup(input: ContactGroupInput!): ContactGroup!
    updateContactGroup(input: ContactGroupUpdateInput!): ContactGroup!
    deleteContactGroupAndUnlinkAllContacts(id :ID!): BooleanResult!
    addContactToGroup(contactId : ID!, groupId: ID!): BooleanResult!
    removeContactFromGroup(contactId : ID!, groupId: ID!): BooleanResult!
}


