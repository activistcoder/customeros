// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PageViewsColumns holds the columns for the "page_views" table.
	PageViewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "app_id", Type: field.TypeString},
		{Name: "name_tracker", Type: field.TypeString},
		{Name: "tenant", Type: field.TypeString},
		{Name: "page_view_id", Type: field.TypeString},
		{Name: "event_id", Type: field.TypeString},
		{Name: "synced_to_customer_os", Type: field.TypeBool},
		{Name: "start_tstamp", Type: field.TypeTime},
		{Name: "end_tstamp", Type: field.TypeTime},
		{Name: "visitor_id", Type: field.TypeString, Nullable: true},
		{Name: "customer_os_contact_id", Type: field.TypeString, Nullable: true},
		{Name: "domain_userid", Type: field.TypeString},
		{Name: "network_userid", Type: field.TypeString},
		{Name: "domain_sessionid", Type: field.TypeInt},
		{Name: "domain_sessionidx", Type: field.TypeInt},
		{Name: "page_views_in_session", Type: field.TypeInt},
		{Name: "page_view_in_session_index", Type: field.TypeInt},
		{Name: "engaged_time_in_s", Type: field.TypeInt},
		{Name: "page_url", Type: field.TypeString},
		{Name: "page_title", Type: field.TypeString},
	}
	// PageViewsTable holds the schema information for the "page_views" table.
	PageViewsTable = &schema.Table{
		Name:       "page_views",
		Columns:    PageViewsColumns,
		PrimaryKey: []*schema.Column{PageViewsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "pageview_event_id",
				Unique:  true,
				Columns: []*schema.Column{PageViewsColumns[5]},
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "app_id", Type: field.TypeString},
		{Name: "name_tracker", Type: field.TypeString},
		{Name: "tenant", Type: field.TypeString},
		{Name: "domain_sessionid", Type: field.TypeString},
		{Name: "domain_sessionidx", Type: field.TypeInt},
		{Name: "synced_to_customer_os", Type: field.TypeBool},
		{Name: "start_tstamp", Type: field.TypeTime},
		{Name: "end_tstamp", Type: field.TypeTime},
		{Name: "domain_userid", Type: field.TypeString},
		{Name: "network_userid", Type: field.TypeString},
		{Name: "visitor_id", Type: field.TypeString, Nullable: true},
		{Name: "customer_os_contact_id", Type: field.TypeString, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "session_domain_sessionid_app_id_name_tracker",
				Unique:  true,
				Columns: []*schema.Column{SessionsColumns[4], SessionsColumns[1], SessionsColumns[2]},
			},
		},
	}
	// VisitorsColumns holds the columns for the "visitors" table.
	VisitorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "app_id", Type: field.TypeString},
		{Name: "name_tracker", Type: field.TypeString},
		{Name: "tenant", Type: field.TypeString},
		{Name: "visitor_id", Type: field.TypeString, Nullable: true},
		{Name: "customer_os_contact_id", Type: field.TypeString, Nullable: true},
		{Name: "domain_userid", Type: field.TypeString},
		{Name: "network_userid", Type: field.TypeString},
		{Name: "page_views", Type: field.TypeInt},
		{Name: "sessions", Type: field.TypeInt},
		{Name: "engaged_time_in_s", Type: field.TypeInt},
		{Name: "synced_to_customer_os", Type: field.TypeBool},
	}
	// VisitorsTable holds the schema information for the "visitors" table.
	VisitorsTable = &schema.Table{
		Name:       "visitors",
		Columns:    VisitorsColumns,
		PrimaryKey: []*schema.Column{VisitorsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "visitor_domain_userid_app_id_name_tracker",
				Unique:  false,
				Columns: []*schema.Column{VisitorsColumns[6], VisitorsColumns[1], VisitorsColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PageViewsTable,
		SessionsTable,
		VisitorsTable,
	}
)

func init() {
	PageViewsTable.Annotation = &entsql.Annotation{
		Table: "page_views",
	}
	SessionsTable.Annotation = &entsql.Annotation{
		Table: "sessions",
	}
	VisitorsTable.Annotation = &entsql.Annotation{
		Table: "visitors",
	}
}
